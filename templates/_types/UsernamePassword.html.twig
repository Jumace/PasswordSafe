{% extends '_tpl/typeDetails.html.twig' %}

{% block content %}
  {% if entry.username is not empty %}
    <div class="icon-text">
      <i class="material-icons">account_circle</i>
      <span class="username">{{entry.username}}</span>
    </div>
  {% endif %}
  {% if entry.password is not empty %}
  <div class="secret-container undisclosed">
    <span class="mdc-list-item__text">
        <i class="material-icons">lock_outline</i>
        <span class="mask">****</span>
        <span class="secret">{{entry.password}}</span>
    </span>
  </div>
  {% endif %}
  {% if entry.note is not empty %}
  <div mdc-list-item__text>
    <i class="material-icons">mode_comment</i>
    <span>{{entry.note}}</span>
  </div>
  {% endif %}
{% endblock %}

{% block additionalButtons %}
<div class="mdc-card__action-icons">
    <i class="mdc-icon-toggle material-icons toggle-secret" role="button" data-toggle-on='{"content": "visibility"}' data-toggle-off='{"content": "visibility_off"}' data-mdc-auto-init="MDCIconToggle">
      visibility_off
    </i>

    <i class="mdc-icon-toggle material-icons copy-secret" data-clipboard-target=".secret" role="button" data-toggle-on='{"content": "done"}' data-toggle-off='{"content": "file_copy"}' data-mdc-auto-init="MDCIconToggle">
      file_copy
    </i>
</div>
{% endblock %}
{% block js_load %}
{{ parent() }}
const copySecret = document.querySelector('.copy-secret');
if ( copySecret ) {
    App.handleCopy(copySecret);
}

const toggleSecret = document.querySelector('.toggle-secret');
if ( toggleSecret ) {
    toggleSecret.addEventListener('MDCIconToggle:change', (status) => {
        const el = document.querySelector('.secret-container');
        if ( status.detail.isOn ) {
            el.classList.remove('undisclosed');
            el.classList.add('disclosed');
            setTimeout(() => {
                toggleSecret.MDCIconToggle.on = false;
                el.classList.remove('disclosed');
                el.classList.add('undisclosed');
            }, 8000);
        } else {
            el.classList.remove('disclosed');
            el.classList.add('undisclosed');

        }
    });
}
{% endblock %}
